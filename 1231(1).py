"""
Потехин Павел Михайлович
15 вариант
КИ21-17/2б
"""
import pygame as py
from pygame import event









screen = py.display.set_mode([1024, 256])                       # создание переменной экрана окна (в скобках размер окна - ширина и высота)


VERTICAL = py.display.Info().current_h                          # высота экрана
                                                                py.display.Info().current_h # функция которая возвращает высоту созданного окна   
HORIZONTAL = py.display.Info().current_w                        # ширина экрана
                                                                py.display.Info().current_w # тоже самое только ширина  






def address_(x, y):
    py.draw.rect(screen, (255, 255, 255), (x, y, 8, 8))         # функция рисует прямоугольник
                                                                # (255,255,255) - цвет - белый
                                                                # screen - поверхность на которой рисует (screen - это созданное окно)
                                                                # (x, y, 8, 8) - x,y - координаты верхнего правого края прямоугольника
                                                                # 8, 8 - размерпо ширине и высоте у прямоугольника






def is_continue(k):
    if k == '':
        return False
    try:
        k = int(k)
    except ValueError:
        print("неправильно введено число, повторите попытку")
        return True
    if (k % 17) != 0:
        print('напишите число, кратное 17', k % 17)
        return True
    tapper(k)
    return False


def tapper(k):
    """
    вычисляет значение формулы Таппера
    """
    for x in range(0, 106):
        for y in range(k, k + 17):
            if 1 / 2 < int((int(y // 17) // 2 ** (17 * x + y % 17)) % 2):
                print(1, end='')


                address_(x * 8, VERTICAL - 8 - (y % 17) * 8)
                # address - рисует по указанным координатам квадрат 8 на 8
                # координата указана для верхней левой точки квадрата
                #
                # тк нужен перебор всех точек то функция должна быть в цикле - у нас это цикл 'for x' и 'for y'
                # они как раз подходят тк новая координата - это новое значение 'y' и 'x'
                #
                # перебор снизу вверх - тк снизу значения 'y' возрастают то начинаем от большего к меньшему то есть при первом 'y'
                # координата должна быть максимальна - тк 'у' кратен 17 то начало будет max + 0 (0 получен от деления 'k' на 17)
                # далее 'k' становится больше на 1 - соответсвенно сдвигаем рисование вверх на 1 деление - у нас деления по 8 поэтому (k%17)*8
                # заканчивается цикл который пробегает все 'y' то есть мы сделали уже для координаты 'y' рисование
                # 
                # теперь тоже самое по 'x' - 'x' небольшое число и оно при умножении на 8 не больше чем размер экрана - поэтому не нужен %
                # первый 'x = 0' и мы идем справа на лево - слева 'х = 0' справа 'x = max' то есть мы можем сдвигать координату на 'x'
                # также сдвиг на 1 деление и тк 'x' изменяется на 1 а нам надо сдвиг на 8 то умножаем на 8
            
            else:
                print(0, end='')
    print()































"""
https://pythonworld.ru/tipy-dannyx-v-python/isklyucheniya-v-python-konstrukciya-try-except-dlya-obrabotki-isklyuchenij.html
"""
